name: Make linescan docker

on:
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  packages: write

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout linescan-api repository
        uses: actions/checkout@v4
        with:
          repository: centroid-is/linescan-api
          token: ${{ secrets.GH_PAT }}
          path: linescan-api
          ref: main

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Install musl tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Get version from Cargo.toml
        id: cargo_version
        working-directory: linescan-api
        run: |
          # Extract the version from Cargo.toml (expects a line like: version = "1.2.3")
          VERSION=$(sed -n 's/^version\s*=\s*"\(.*\)"/\1/p' Cargo.toml | head -n1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found Cargo.toml version: $VERSION"

      - name: Build artifact
        working-directory: linescan-api
        run: |
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Prepare Docker build context
        working-directory: linescan-api
        run: |
          # Create a Dockerfile that copies the built binary into an Alpine-based image.
          # Adjust the binary name if it differs from 'linescan_api'
          cat <<'EOF' > Dockerfile
          FROM alpine:latest
          COPY target/x86_64-unknown-linux-musl/release/linescan_api /usr/local/bin/linescan_api
          RUN chmod +x /usr/local/bin/linescan_api
          ENTRYPOINT ["/usr/local/bin/linescan_api"]
          EOF

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: linescan-api
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/linescan-api:${{ steps.cargo_version.outputs.version }},ghcr.io/${{ github.repository_owner }}/linescan-api:latest
