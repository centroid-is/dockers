name: Publish Shrimp Batcher as Docker Image

on:
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  packages: write

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest release info
        id: release
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Fetch release info from the upstream repository
          LATEST_RELEASE=$(gh release view --repo centroid-is/blossom --json tagName,assets)
          
          # Remove a potential "v" prefix from the tag name
          VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tagName' | sed 's/^v//')
          
          # Find the asset URL for shrimp-batcher.tar.gz (not used directly here but available)
          ASSET_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name=="brim-data-logger.tar.gz") | .apiUrl')
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "asset_url=$ASSET_URL" >> $GITHUB_OUTPUT

      - name: Download data-logger asset
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Download the release asset matching the version tag
          gh release download --repo centroid-is/blossom --pattern "brim-data-logger.tar.gz" "v${{ steps.release.outputs.version }}"

      - name: Extract binary and prepare Docker build context
        run: |
          # Extract the tarball (assumes it contains the 'shrimp-batcher' binary)
          tar -xzvf brim-data-logger.tar.gz
          
          # Create a Dockerfile that uses Alpine and copies the binary into the container
          cat <<'EOF' > Dockerfile
          FROM alpine:latest
          COPY brim-data-logger /usr/local/bin/brim-data-logger
          RUN chmod +x /usr/local/bin/brim-data-logger
          ENTRYPOINT ["/usr/local/bin/brim-data-logger"]
          EOF

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/brim-data-logger:${{ steps.release.outputs.version }},ghcr.io/${{ github.repository_owner }}/brim-data-logger:latest

